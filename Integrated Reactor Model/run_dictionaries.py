"""
Run dictionaries for parametric studies.
Each dictionary entry represents a set of parameters to modify from the base inputs.
Generated by Parametric_GUI
"""
import numpy as np

# Default run with base inputs
all_runs = [
    {
        "description": "Default inputs"
    }

    # Simple parameter runs
    ,{
        "description": "fuel_height = 0.6 + core_power = 20.0",
        "fuel_height": 0.6,
        "core_power": 20.0
    }
]

# Multi-parameter loops
# Generate parametric combinations automatically
# Loop set 1: Loop Set 1
loop_set_1_params = {
    "core_power": [10, 20, 30],
    "fuel_height": [1, 2, 3],
    "n%": [10, 20, 30]
}

# Generate all combinations for Loop Set 1
from itertools import product
loop_set_1_combinations = []
for combo in product(*loop_set_1_params.values()):
    run_dict = {}
    for i, (param, value) in enumerate(zip(loop_set_1_params.keys(), combo)):
        run_dict[param] = value
    # Generate description
    desc_parts = [f"{param} = {value}" for param, value in run_dict.items()]
    run_dict["description"] = " + ".join(desc_parts)
    loop_set_1_combinations.append(run_dict)

# Add to all_runs
all_runs.extend(loop_set_1_combinations)

# Loop set 2: Loop Set 2
loop_set_2_params = {
    "n%E": [30, 50],
    "T_inlet": [400, 600]
}

# Generate all combinations for Loop Set 2
from itertools import product
loop_set_2_combinations = []
for combo in product(*loop_set_2_params.values()):
    run_dict = {}
    for i, (param, value) in enumerate(zip(loop_set_2_params.keys(), combo)):
        run_dict[param] = value
    # Generate description
    desc_parts = [f"{param} = {value}" for param, value in run_dict.items()]
    run_dict["description"] = " + ".join(desc_parts)
    loop_set_2_combinations.append(run_dict)

# Add to all_runs
all_runs.extend(loop_set_2_combinations)
