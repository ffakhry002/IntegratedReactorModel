Integrated Reactor Model
======================
Total Python files: 112
Total lines of code: 18220


Project Structure:
├── inputs.py                     # Legacy input parameters (still used by main.py)
├── main.py                      # Main execution script
├── run_dictionaries.py          # Parameter dictionaries for parametric studies
├── remove_pycache.py            # Utility to clean __pycache__ directories
├── architecture.txt             # This project structure documentation
├── __init__.py                  # Package initialization file
│
├── utils/                       # Centralized utilities and base configuration (lowercase)
│   ├── __init__.py             # Package initialization
│   ├── base_inputs.py          # Centralized input parameters and configuration
│   └── run_dictionaries.py    # Additional run dictionary utilities
│
├── Inputs_GUI/                  # Main interactive graphical user interface
│   ├── __init__.py             # Package initialization
│   ├── main.py                 # GUI application entry point
│   ├── reactor_gui.py          # Main GUI application controller
│   ├── components/             # GUI component modules
│   │   ├── __init__.py
│   │   ├── visualization_tab.py # Main reactor visualization tab
│   │   ├── design_tab.py       # Core and pin layout design interface with enhanced core designer
│   │   ├── thermal_tab.py      # Thermal hydraulics controls and results viewer
│   │   ├── advanced_tab.py     # Advanced OpenMC and depletion parameters
│   │   └── geometry_tab.py     # OpenMC geometry configuration and visualization
│   ├── visualization/          # Visualization engines
│   │   ├── __init__.py
│   │   ├── core_view.py        # Core-level reactor visualization
│   │   ├── assembly_view.py    # Assembly-level visualization
│   │   ├── element_view.py     # Individual fuel element visualization
│   │   └── plotting_utils.py   # Common plotting utilities
│   ├── controls/               # Parameter control widgets
│   │   ├── __init__.py
│   │   └── parameter_controls.py # Input parameter controls and validation
│   └── utils/                  # GUI utility functions
│       ├── __init__.py
│       ├── constants.py        # Material colors and GUI constants
│       └── export_utils.py     # Configuration export utilities
│
├── Parametric_GUI/              # Dedicated parametric study generator
│   ├── __init__.py             # Package initialization
│   ├── main.py                 # Standalone parametric GUI entry point
│   ├── parametric_app.py       # Main parametric application controller
│   ├── parametric_gui_standalone.py # Standalone parametric GUI application
│   ├── components/             # Parametric GUI component modules
│   │   ├── __init__.py
│   │   ├── simple_tab.py       # Simple parameter studies interface
│   │   ├── complex_tab.py      # Multi-parameter loops interface
│   │   └── preview_tab.py      # Preview and export interface
│   ├── designers/              # Visual parameter designers
│   │   ├── __init__.py
│   │   ├── core_lattice_designer.py # Interactive core lattice designer
│   │   └── depletion_timesteps_designer.py # Depletion timesteps designer
│   ├── models/                 # Data models for parametric studies
│   │   ├── __init__.py
│   │   ├── parameter_model.py  # Parameter data and metadata model
│   │   └── run_configuration.py # Run configuration data model
│   └── utils/                  # Parametric GUI utilities
│       ├── __init__.py
│       ├── parameter_utils.py  # Parameter processing utilities
│       └── export_utils.py     # Export functionality for run dictionaries
│
├── simulation_data/             # Runtime simulation outputs (created during execution)
│   ├── Geometry_and_Materials/  # Geometry visualization outputs
│   ├── ThermalHydraulics/       # TH calculation results with scenario subdirectories
│   │   ├── cosine_calculation/ # Cosine power approximation results
│   │   ├── hot_element/        # Hot element power profile results
│   │   └── core_average/       # Core average power profile results
│   ├── transport_data/          # OpenMC transport calculation data
│   ├── flux_plots/             # Neutron flux distribution plots
│   ├── power_plots/            # Power distribution plots
│   ├── depletion_data/         # Depletion calculation outputs
│   └── depletion_plots/        # Depletion analysis plots
│
├── eigenvalue/                  # OpenMC transport calculations
│   ├── __init__.py             # Package initialization file
│   ├── run.py                  # Main eigenvalue calculation runner
│   ├── outputs.py              # Results processing and output generation
│   ├── find_no_checks.py       # Utility functions
│   ├── parametric_study.py     # Parametric study functionality
│   └── tallies/                # OpenMC tally definitions
│       ├── __init__.py
│       ├── core_tallies.py     # Core flux and reaction rate tallies
│       ├── energy_groups.py    # Energy group definitions
│       ├── irradiation_tallies.py # Irradiation position tallies
│       ├── normalization.py    # Tally normalization utilities
│       └── power_tallies.py    # Power distribution tallies
│
├── depletion/                   # Fuel depletion calculations
│   ├── __init__.py
│   ├── run_depletion.py        # Main depletion calculation runner
│   ├── depletion_operator.py   # OpenMC depletion operator setup
│   └── depletion_output_text.py # Text output formatting for depletion
│
├── plotting/                    # Visualization and plotting
│   ├── plotall.py              # Main plotting coordinator
│   └── functions/              # Individual plotting functions
│       ├── depletion.py        # Depletion evolution plots
│       ├── entropy.py          # Shannon entropy convergence plots
│       ├── flux_maps.py        # 2D/3D neutron flux maps
│       ├── flux_traps.py       # Irradiation position flux plots
│       ├── normalized_flux_profiles.py # Normalized flux profile plots
│       ├── power.py            # Power distribution plots
│       └── utils.py            # Plotting utility functions
│
├── Reactor/                     # Reactor geometry and materials
│   ├── materials.py            # Material definitions and properties
│   ├── geometry.py             # Main geometry visualization
│   └── geometry_helpers/       # Geometry construction utilities
│       ├── __init__.py
│       ├── core.py             # Core lattice and universe construction
│       ├── irradiation_cell.py # Irradiation position geometry
│       ├── pin_fuel.py         # Pin-type fuel assembly geometry
│       ├── plate_fuel.py       # Plate-type fuel assembly geometry
│       └── utils.py            # Geometry utility functions
│
└── ThermalHydraulics/          # Thermal hydraulics calculations
    ├── __init__.py
    ├── TH_refactored.py        # Main thermal hydraulics system
    └── code_architecture/      # Modular TH code architecture
        ├── __init__.py
        ├── data_output_code/   # Data output and visualization
        │   ├── __init__.py
        │   ├── output_helpers/ # Output processing utilities
        │   │   ├── __init__.py
        │   │   ├── th_data_extractor.py    # Data extraction from TH results
        │   │   ├── th_data_writer.py       # Data writing utilities
        │   │   ├── th_plotting.py          # TH plotting functions
        │   │   └── th_temperature_profiles.py # Temperature profile plotting
        │   └── plottingcode/   # TH visualization code
        │       ├── __init__.py
        │       ├── plotting_coeffs.py      # Heat transfer coefficient plots
        │       ├── plotting_geometry.py    # Geometry visualization
        │       ├── plotting_pin.py         # Pin assembly TH plots
        │       └── plotting_plate.py       # Plate assembly TH plots
        └── helper_codes/       # Core TH calculation modules
            ├── __init__.py
            ├── README.md       # TH module documentation
            ├── convergence/    # Iterative solution convergence
            │   ├── __init__.py
            │   ├── clad_convergence.py     # Cladding temperature convergence
            │   ├── coolant_convergence.py  # Coolant temperature convergence
            │   ├── fuel_convergence.py     # Fuel temperature convergence
            │   ├── iteration.py            # Iteration control
            │   └── temperature_convergence.py # Overall temperature convergence
            ├── material_properties/ # Thermophysical properties
            │   ├── __init__.py
            │   ├── clad_properties.py      # Cladding material properties
            │   ├── coolant_properties.py   # Coolant thermophysical properties
            │   ├── fuel_properties.py      # Fuel material properties
            │   └── gap_properties.py       # Gap conductance properties
            ├── models/         # Core TH models and data structures
            │   ├── geometry.py             # TH geometry model
            │   ├── geometry_validator.py   # Geometry validation
            │   ├── material.py             # Material model
            │   ├── reactor.py              # Reactor model
            │   └── thermal_state.py        # Thermal state data structure
            ├── power_calculations/ # Power distribution handling
            │   ├── __init__.py
            │   ├── heat_flux.py            # Heat flux calculations
            │   └── power_distribution.py   # Axial power distribution
            └── temperature_points/ # Temperature calculation points
                ├── __init__.py
                ├── pin_temperature_points.py   # Pin temperature points
                └── plate_temperature_points.py # Plate temperature points

External Dependencies:
======================
The following directories are located outside the "Integrated Reactor Model" directory
and are required for proper operation:

├── cross_sections/              # Nuclear cross section data (external)
│   ├── cross_sections.xml      # Main cross section file
│   ├── neutron/                # Neutron cross section data
│   └── photon/                 # Photon cross section data
│
├── depletion chains/            # Depletion chain data files (external)
    ├── chain_casl_pwr.xml      # CASL depletion chain
    └── chain_endfb71_pwr.xml   # ENDF/B-VII.1 depletion chain

Single Runtime Directory Structure:
============================
The following directories are created automatically during simulation execution:

simulation_data/                 # Main simulation output directory
├── Geometry_and_Materials/      # Geometry plots and material definitions
├── ThermalHydraulics/          # Thermal hydraulics results
│   ├── cosine_calculation/     # Cosine power approximation results
│   ├── hot_element/           # Hot element power profile results
│   └── core_average/          # Core average power profile results
├── transport_data/             # OpenMC eigenvalue calculation data
├── flux_plots/                # Neutron flux visualization plots
├── power_plots/               # Power distribution plots
├── depletion_data/            # Depletion calculation outputs
└── depletion_plots/           # Depletion evolution plots



Parametric Runtime Directory Structure:
============================
The following directories are created automatically during a parametric study execution:


parametric_simulation_20250527_031447/           # Timestamped parametric study directory
├── parametric_study_log.txt                     # Log file containing run parameters and results
├── run_1/                                       # Individual parameter case directory
│   ├── Geometry_and_Materials/                  # Case-specific geometry plots
│   ├── ThermalHydraulics/
│   │   ├── cosine_calculation/
│   │   ├── hot_element/
│   │   └── core_average/
│   ├── transport_data/
│   ├── flux_plots/
│   ├── power_plots/
│   ├── depletion_data/
│   └── depletion_plots/
├── run_2/                                       # Second parameter case
│   └── [Same structure as run_1]
├── run_3/                                       # Third parameter case
│   └── [Same structure as run_1]
├── run_4/                                       # Fourth parameter case
│   └── [Same structure as run_1]
├── run_5/                                       # Fifth parameter case
│   └── [Same structure as run_1]
├── run_6/                                       # Sixth parameter case
│   └── [Same structure as run_1]
├── run_7/                                       # Seventh parameter case
│   └── [Same structure as run_1]
├── run_8/                                       # Eighth parameter case
│   └── [Same structure as run_1]
└── run_9/                                       # Ninth parameter case
    └── [Same structure as run_1]

etc.
